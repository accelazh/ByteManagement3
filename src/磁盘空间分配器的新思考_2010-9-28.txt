1. 块长度信息可以记录在分配内存时给出的键对象里，这样，磁盘上的数据块，不需要记录任何控制信息，进一步节省空间，加快分配速度。
2. 定长链接块分配器，建成的二级分配器，有两个缺点：一是上层分配器不能立即将空间释放到下层分配器，其实这也挺浪费空间；二是下层分配器由于采用的是链接结构，对于大于块大小的数据，会因数据分散而增加磁盘重定向次数，即磁盘碎片。这点上就不如BinaryPool。
3. 更新式的分配器可以考虑融合BinaryPool分配方式与链接块分配（未必等大），以及块延迟合并（进当小块聚集成足够大块时，才向上合并，未必是两倍。这个灵感来自于定长链接块二级分配器里空间回收的研究，那里面其实是上层的小块凑够了下层的块大小时，才合并）。还可以将块的所有控制信息记录在内存的键对象中，从而使分配几乎没有磁盘读写。通过给自由链表中的块排序（内存中，并且尝试能否假定自由链表中不会有很多块），可以方便实现合并块操作，不过排序的开销得考虑。自由链表也可以考虑完全放到内存里来。
4. 链接块节省空间，实际上就是因为对大于块大小的分配，使用了链接的方式来控制大小。可以考虑使用不同大小的链接跨，对于大数据，用链接块控制空间浪费，同时尽量减少链接次数。